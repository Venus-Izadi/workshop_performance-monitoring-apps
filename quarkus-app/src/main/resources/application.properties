quarkus.http.port=8701

# Use InMem H2 DB for dev and test profiles
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:test
# %test.quarkus.datasource.db-kind=h2
# %test.quarkus.datasource.jdbc.url=jdbc:h2:mem:test
# quarkus.hibernate-orm.packages=org.acme.hibernate.orm.panache.entity,org.acme.hibernate.orm.panache.repository

# In prod we rely on Service Biding Operator (SBO) (chek if it is properly installed on your OCP Cluster)
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.kubernetes-service-binding.services.postgresqldb.api-version=postgres-operator.crunchydata.com/v1beta1
%prod.quarkus.kubernetes-service-binding.services.postgresqldb.kind=PostgresCluster
%prod.quarkus.kubernetes-service-binding.services.postgresqldb.name=postgres
# no need to enter these manually anymore, SBO will take care magically
# %prod.quarkus.datasource.username=quarkus
# %prod.quarkus.datasource.password=quarkus
# %prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgres-ha/quarkus
# %prod.quarkus.datasource.jdbc.max-size=8
# %prod.quarkus.datasource.jdbc.min-size=3

# quarkus.hibernate-orm.datasource=postgres
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%prod.quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=true
# quarkus.hibernate-orm.sql-load-script=import.sql